//ExportXML.jsx//An InDesign CS6 JavaScript////Shows how to export XML.main();var globalFileName;var selectedDocument;var xmlDocument;var pageTag;var pageNameTag;var lessonTag;var textFrameTag;function main(){    setup();    setupXMLDocument();    readData();        writeXML();}function setup(){    selectedDocument = app.activeDocument;    globalFileName = selectedDocument.name;}function readData(){    var pages = selectedDocument.pages;    $.writeln('# of pages: ' + pages.length);    for (var x = 0; x < pages.length; x++){          page = pages.item(x);           pageName = page.name;          pageTagToAdd = addPage(pageName);          readPage(pageTagToAdd,page);    }}function readPage(pageTagToAddTo,page) {    var textFrames = page.textFrames;    $.writeln('# of textFrames: ' + textFrames.length);    for (var x = 0; x < textFrames.length; x++)    {          textFrame = textFrames.item(x);           frameName = textFrame.name;          contents = textFrame.contents;          addTextFrame(pageTagToAddTo,contents);    }}function setupXMLDocument(){	xmlDocument = app.documents.add();    pageTag = xmlDocument.xmlTags.add("page");    pageNameTag = xmlDocument.xmlTags.add("pageName");    lessonTag = xmlDocument.xmlTags.add("lesson");    textFrameTag = xmlDocument.xmlTags.add("textFrame");	myRootXMLElement = xmlDocument.xmlElements.item(0);}function addTextFrame(page,contents){	var myXMLElement = page.xmlElements.add(textFrameTag);    myXMLElement.contents = contents;}function addPage(name){	var pageTagLocal = myRootXMLElement.xmlElements.add(pageTag);    var pageName = pageTagLocal.xmlElements.add(pageNameTag);    pageName.contents = name;    return pageTagLocal;}function setupXML(){	var myDocument = app.documents.add();	var myRootXMLElement = myDocument.xmlElements.item(0);	var myXMLTag = myDocument.xmlTags.add("xml_element");	var myXMLElementA = myRootXMLElement.xmlElements.add(myXMLTag);	myXMLElementA.contents = "A";	var myXMLElementB = myRootXMLElement.xmlElements.add(myXMLTag);	myXMLElementB.contents = "B";	var myXMLElementC = myRootXMLElement.xmlElements.add(myXMLTag);	myXMLElementC.contents = "C";	var myXMLElementD = myRootXMLElement.xmlElements.add(myXMLTag);	myXMLElementD.contents = "D";	with (myXMLElementD){		for(var myCounter = 0; myCounter < 5; myCounter++){			with(xmlElements.add(myXMLTag)){				contents = "D" + myCounter;			}		}	}}function writeXML(){	//<fragment>    activeDoc = app.activeDocument;    var fileName = activeDoc.name;	var myDocument = app.documents.item(0);	//Export the entire XML structure in the document.	myDocument.exportFile(ExportFormat.xml, File(Folder.desktop + "/" + globalFileName + " .xml"));	//Export a specific XML element and its child XML elements.//	var myXMLElement = myDocument.xmlElements.item(0).xmlElements.item(-1);//	myXMLElement.exportFile(ExportFormat.xml, File(Folder.desktop + "/PartialDocumentXML.xml"));	//</fragment>}function myTeardown(){}